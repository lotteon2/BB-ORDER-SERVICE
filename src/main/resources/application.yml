server:
  port: 8900
spring:
  application:
    name: order-service
  config:
    activate:
      on-profile: local, dev, local
    import: optional:configserver:http://localhost:8888
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true
      path: /h2-console
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:order-service;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false;MODE=MySQL
  jpa:
    hibernate:
      ddl-auto: create
    generate-ddl: true
    defer-datasource-initialization: true
    properties:
      hibernate:
        format_sql: true
  redis:
    host: localhost
    port: 6379
    password: 123456
  kafka:
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      acks: 1
    consumer:
      bootstrap-servers: localhost:9092
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: order-service
    listener:
      ack-mode: manual
  main:
    allow-circular-references: true
management:
  endpoints:
    web:
      exposure:
        include:
          - "refresh"
          - "bus-refresh"
logging:
  level:
    org:
      hibernate:
        SQL: DEBUG